# Generated by Django 4.2.11 on 2024-04-22 06:37

import apis_core.generic.abc
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ("apis_metainfo", "0012_remove_rootobject_deprecated_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("apis_ontology", "0004_versionwork_work_versionwork_collection"),
    ]

    operations = [
        migrations.CreateModel(
            name="Instance",
            fields=[
                (
                    "rootobject_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="apis_metainfo.rootobject",
                    ),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "alternative_names",
                    models.TextField(
                        blank=True, null=True, verbose_name="Alternative names"
                    ),
                ),
                (
                    "external_links",
                    models.TextField(
                        blank=True, null=True, verbose_name="External links"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="Name"
                    ),
                ),
                (
                    "set_num",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Set 1", "Set 1"),
                            ("Set 2", "Set 2"),
                            ("Set 3", "Set 3"),
                            ("Set 4", "Set 4"),
                        ],
                        max_length=5,
                        null=True,
                        verbose_name="Set",
                    ),
                ),
                ("volume", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "sb_text_number",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Number ascribed to item by Tibschol",
                    ),
                ),
                (
                    "pp_kdsb",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Page numbers in print",
                    ),
                ),
                (
                    "num_folios",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Number of folios",
                    ),
                ),
                (
                    "signature_letter",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Signature letter (category)",
                    ),
                ),
                (
                    "signature_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Signature number",
                    ),
                ),
                (
                    "drepung_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Drepung catalogue number",
                    ),
                ),
                (
                    "provenance",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Provenance"
                    ),
                ),
                (
                    "collection",
                    models.ManyToManyField(
                        editable=False, to="apis_metainfo.collection"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("apis_metainfo.rootobject", models.Model),
        ),
        migrations.CreateModel(
            name="VersionInstance",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "alternative_names",
                    models.TextField(
                        blank=True, null=True, verbose_name="Alternative names"
                    ),
                ),
                (
                    "external_links",
                    models.TextField(
                        blank=True, null=True, verbose_name="External links"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="Name"
                    ),
                ),
                (
                    "set_num",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Set 1", "Set 1"),
                            ("Set 2", "Set 2"),
                            ("Set 3", "Set 3"),
                            ("Set 4", "Set 4"),
                        ],
                        max_length=5,
                        null=True,
                        verbose_name="Set",
                    ),
                ),
                ("volume", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "sb_text_number",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Number ascribed to item by Tibschol",
                    ),
                ),
                (
                    "pp_kdsb",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Page numbers in print",
                    ),
                ),
                (
                    "num_folios",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Number of folios",
                    ),
                ),
                (
                    "signature_letter",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Signature letter (category)",
                    ),
                ),
                (
                    "signature_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Signature number",
                    ),
                ),
                (
                    "drepung_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Drepung catalogue number",
                    ),
                ),
                (
                    "provenance",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Provenance"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionInstance_collection",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("m2m_history_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "collection",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace="",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_metainfo.collection",
                    ),
                ),
                (
                    "history",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="apis_ontology.versioninstance",
                    ),
                ),
                (
                    "instance",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace="",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.instance",
                    ),
                ),
            ],
            options={
                "verbose_name": "VersionInstance_collection",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
