# Generated by Django 5.1.6 on 2025-03-26 12:49

from django.db import migrations
from tqdm import tqdm
from apis_ontology.date_utils import tibschol_dateparser

from apis_ontology.models import Person, TibScholEntityMixin, TibScholRelationMixin


def migrate_legacy_dates(apps, schema_editor):
    FIELD_MAPPING = {"start_date_written": "start", "end_date_written": "end"}

    for m in (
        TibScholEntityMixin.__subclasses__() + TibScholRelationMixin.__subclasses__()
    ):
        # temporarily set skip_date_interval_populate=True
        # to avoid the default parser being used on the fields
        m.skip_date_interval_populate = True
        for obj in tqdm(m.objects.all(), desc=m.__name__):
            for old_field, new_field in FIELD_MAPPING.items():
                value = getattr(obj, old_field)
                if not value:
                    continue
                written_date = value.replace("ab", "after").replace("bis", "before")
                setattr(obj, new_field, written_date)
                date_sort, date_from, date_to = tibschol_dateparser(written_date)
                setattr(obj, f"{new_field}_date_sort", date_sort)
                setattr(obj, f"{new_field}_date_from", date_from)
                setattr(obj, f"{new_field}_date_to", date_to)

            obj.save()


class Migration(migrations.Migration):

    dependencies = [
        ("apis_ontology", "0062_instance_start_instance_start_date_from_and_more"),
    ]
    operations = [migrations.RunPython(migrate_legacy_dates)]
